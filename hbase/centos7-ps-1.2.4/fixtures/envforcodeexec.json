{
  "remoteFolder": "/easy-installer/",
  "box": {
    "id": 1900556,
    "ip": "192.168.33.110",
    "name": "box1",
    "hostname": "a0.host.name",
    "roles": "MASTER,NAMENODE,ZOOKEEPER,MYSQL_MASTER,RESOURCEMANAGER",
    "dnsServer": "",
    "ips": "",
    "ports": "",
    "boxRoleConfig": ""
  },
  "boxGroup": {
    "id": 1933316,
    "name": "boxgroup1",
    "configContent": "# place holder\r\n",
    "installResults": null,
    "boxes": [
      {
        "id": 1900556,
        "ip": "192.168.33.110",
        "name": "box1",
        "hostname": "a0.host.name",
        "roles": "MASTER,NAMENODE,ZOOKEEPER,MYSQL_MASTER,RESOURCEMANAGER",
        "dnsServer": "192.168.2.60",
        "ips": "",
        "ports": "",
        "boxRoleConfig": null
      },
      {
        "id": 1900558,
        "ip": "192.168.33.111",
        "name": "box2",
        "hostname": "a1.host.name",
        "roles": "NODEMANAGER,REGIONSERVER,DATANODE,MYSQL_REPLICA,ZOOKEEPER",
        "dnsServer": "192.168.2.60",
        "ips": "192.168.2.12,192.168.2.13",
        "ports": "80,8080",
        "boxRoleConfig": null
      },
      {
        "id": 1900557,
        "ip": "192.168.33.112",
        "name": "box3",
        "hostname": "a2.host.name",
        "roles": "NODEMANAGER,REGIONSERVER,DATANODE,MYSQL_REPLICA,ZOOKEEPER",
        "dnsServer": "192.168.2.60",
        "ips": "192.168.2.15,192.168.2.16",
        "ports": "80,8080",
        "boxRoleConfig": null
      }
    ]
  },
  "software": {
    "name": "hbase",
    "sversion": "ps-1.2.4",
    "ostype": "CentOs7",
    "runas": "hbase",
    "timeouts": null,
    "runner": "powershell -File {code} -envfile {envfile} -action {action}",
    "possibleRoles": "HBASEMASTER,REGIONSERVER",
    "textfiles": [
      {
        "name": "conf/hbase-env.sh",
        "content": "#\n#/**\n# * Licensed to the Apache Software Foundation (ASF) under one\n# * or more contributor license agreements.  See the NOTICE file\n# * distributed with this work for additional information\n# * regarding copyright ownership.  The ASF licenses this file\n# * to you under the Apache License, Version 2.0 (the\n# * \"License\"); you may not use this file except in compliance\n# * with the License.  You may obtain a copy of the License at\n# *\n# *     http://www.apache.org/licenses/LICENSE-2.0\n# *\n# * Unless required by applicable law or agreed to in writing, software\n# * distributed under the License is distributed on an \"AS IS\" BASIS,\n# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# * See the License for the specific language governing permissions and\n# * limitations under the License.\n# */\n\n# Set environment variables here.\n\n# This script sets variables multiple times over the course of starting an hbase process,\n# so try to keep things idempotent unless you want to take an even deeper look\n# into the startup scripts (bin/hbase, etc.)\n\n# The java implementation to use.  Java 1.7+ required.\n# export JAVA_HOME=/usr/java/jdk1.6.0/\n\n# Extra Java CLASSPATH elements.  Optional.\n# export HBASE_CLASSPATH=\n\n# The maximum amount of heap to use. Default is left to JVM default.\n# export HBASE_HEAPSIZE=1G\n\n# Uncomment below if you intend to use off heap cache. For example, to allocate 8G of \n# offheap, set the value to \"8G\".\n# export HBASE_OFFHEAPSIZE=1G\n\n# Extra Java runtime options.\n# Below are what we set by default.  May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport HBASE_OPTS=\"-XX:+UseConcMarkSweepGC\"\n\n# Configure PermSize. Only needed in JDK7. You can safely remove it for JDK8+\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -XX:PermSize=128m -XX:MaxPermSize=128m\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -XX:PermSize=128m -XX:MaxPermSize=128m\"\n\n# Uncomment one of the below three options to enable java garbage collection logging for the server-side processes.\n\n# This enables basic gc logging to the .out file.\n# export SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps\"\n\n# This enables basic gc logging to its own file.\n# If FILE-PATH is not replaced, the log file(.gc) would still be generated in the HBASE_LOG_DIR .\n# export SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:<FILE-PATH>\"\n\n# This enables basic GC logging to its own file with automatic log rolling. Only applies to jdk 1.6.0_34+ and 1.7.0_2+.\n# If FILE-PATH is not replaced, the log file(.gc) would still be generated in the HBASE_LOG_DIR .\n# export SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:<FILE-PATH> -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=1 -XX:GCLogFileSize=512M\"\n\n# Uncomment one of the below three options to enable java garbage collection logging for the client processes.\n\n# This enables basic gc logging to the .out file.\n# export CLIENT_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps\"\n\n# This enables basic gc logging to its own file.\n# If FILE-PATH is not replaced, the log file(.gc) would still be generated in the HBASE_LOG_DIR .\n# export CLIENT_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:<FILE-PATH>\"\n\n# This enables basic GC logging to its own file with automatic log rolling. Only applies to jdk 1.6.0_34+ and 1.7.0_2+.\n# If FILE-PATH is not replaced, the log file(.gc) would still be generated in the HBASE_LOG_DIR .\n# export CLIENT_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:<FILE-PATH> -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=1 -XX:GCLogFileSize=512M\"\n\n# See the package documentation for org.apache.hadoop.hbase.io.hfile for other configurations\n# needed setting up off-heap block caching. \n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n# NOTE: HBase provides an alternative JMX implementation to fix the random ports issue, please see JMX\n# section in HBase Reference Guide for instructions.\n\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n# export HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS $HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10101\"\n# export HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS $HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10102\"\n# export HBASE_THRIFT_OPTS=\"$HBASE_THRIFT_OPTS $HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS $HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n# export HBASE_REST_OPTS=\"$HBASE_REST_OPTS $HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10105\"\n\n# File naming hosts on which HRegionServers will run.  $HBASE_HOME/conf/regionservers by default.\n# export HBASE_REGIONSERVERS=${HBASE_HOME}/conf/regionservers\n\n# Uncomment and adjust to keep all the Region Server pages mapped to be memory resident\n#HBASE_REGIONSERVER_MLOCK=true\n#HBASE_REGIONSERVER_UID=\"hbase\"\n\n# File naming hosts on which backup HMaster will run.  $HBASE_HOME/conf/backup-masters by default.\n# export HBASE_BACKUP_MASTERS=${HBASE_HOME}/conf/backup-masters\n\n# Extra ssh options.  Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored.  $HBASE_HOME/logs by default.\n# export HBASE_LOG_DIR=${HBASE_HOME}/logs\n\n# Enable remote JDWP debugging of major HBase processes. Meant for Core Developers \n# export HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8070\"\n# export HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8071\"\n# export HBASE_THRIFT_OPTS=\"$HBASE_THRIFT_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8072\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_ZOOKEEPER_OPTS -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8073\"\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\n# export HBASE_PID_DIR=/var/hadoop/pids\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\n# export HBASE_MANAGES_ZK=true\n\n# The default log rolling policy is RFA, where the log file is rolled as per the size defined for the \n# RFA appender. Please refer to the log4j.properties file to see more details on this appender.\n# In case one needs to do log rolling on a date change, one should set the environment property\n# HBASE_ROOT_LOGGER to \"<DESIRED_LOG LEVEL>,DRFA\".\n# For example:\n# HBASE_ROOT_LOGGER=INFO,DRFA\n# The reason for changing default to RFA is to avoid the boundary case of filling out disk space as \n# DRFA doesn't put any cap on the log size. Please refer to HBase-5655 for more context.",
        "codeLineSeperator": "LF"
      },
      {
        "name": "conf/hbase-env.cmd",
        "content": "@rem/**\n@rem * Licensed to the Apache Software Foundation (ASF) under one\n@rem * or more contributor license agreements.  See the NOTICE file\n@rem * distributed with this work for additional information\n@rem * regarding copyright ownership.  The ASF licenses this file\n@rem * to you under the Apache License, Version 2.0 (the\n@rem * \"License\"); you may not use this file except in compliance\n@rem * with the License.  You may obtain a copy of the License at\n@rem *\n@rem *     http://www.apache.org/licenses/LICENSE-2.0\n@rem *\n@rem * Unless required by applicable law or agreed to in writing, software\n@rem * distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem * See the License for the specific language governing permissions and\n@rem * limitations under the License.\n@rem */\n\n@rem Set environment variables here.\n\n@rem The java implementation to use.  Java 1.7+ required.\n@rem set JAVA_HOME=c:\\apps\\java\n\n@rem Extra Java CLASSPATH elements.  Optional.\n@rem set HBASE_CLASSPATH=\n\n@rem The maximum amount of heap to use. Default is left to JVM default.\n@rem set HBASE_HEAPSIZE=1000\n\n@rem Uncomment below if you intend to use off heap cache. For example, to allocate 8G of \n@rem offheap, set the value to \"8G\".\n@rem set HBASE_OFFHEAPSIZE=1000\n\n@rem For example, to allocate 8G of offheap, to 8G:\n@rem etHBASE_OFFHEAPSIZE=8G\n\n@rem Extra Java runtime options.\n@rem Below are what we set by default.  May only work with SUN JVM.\n@rem For more on why as well as other possible settings,\n@rem see http://wiki.apache.org/hadoop/PerformanceTuning\n@rem JDK6 on Windows has a known bug for IPv6, use preferIPv4Stack unless JDK7.\n@rem @rem See TestIPv6NIOServerSocketChannel.\nset HBASE_OPTS=\"-XX:+UseConcMarkSweepGC\" \"-Djava.net.preferIPv4Stack=true\"\n\n@rem Configure PermSize. Only needed in JDK7. You can safely remove it for JDK8+\nset HBASE_MASTER_OPTS=%HBASE_MASTER_OPTS% \"-XX:PermSize=128m\" \"-XX:MaxPermSize=128m\"\nset HBASE_REGIONSERVER_OPTS=%HBASE_REGIONSERVER_OPTS% \"-XX:PermSize=128m\" \"-XX:MaxPermSize=128m\"\n\n@rem Uncomment below to enable java garbage collection logging for the server-side processes\n@rem this enables basic gc logging for the server processes to the .out file\n@rem set SERVER_GC_OPTS=\"-verbose:gc\" \"-XX:+PrintGCDetails\" \"-XX:+PrintGCDateStamps\" %HBASE_GC_OPTS%\n\n@rem this enables gc logging using automatic GC log rolling. Only applies to jdk 1.6.0_34+ and 1.7.0_2+. Either use this set of options or the one above\n@rem set SERVER_GC_OPTS=\"-verbose:gc\" \"-XX:+PrintGCDetails\" \"-XX:+PrintGCDateStamps\" \"-XX:+UseGCLogFileRotation\" \"-XX:NumberOfGCLogFiles=1\" \"-XX:GCLogFileSize=512M\" %HBASE_GC_OPTS%\n\n@rem Uncomment below to enable java garbage collection logging for the client processes in the .out file.\n@rem set CLIENT_GC_OPTS=\"-verbose:gc\" \"-XX:+PrintGCDetails\" \"-XX:+PrintGCDateStamps\" %HBASE_GC_OPTS%\n\n@rem Uncomment below (along with above GC logging) to put GC information in its own logfile (will set HBASE_GC_OPTS)\n@rem set HBASE_USE_GC_LOGFILE=true\n\n@rem Uncomment and adjust to enable JMX exporting\n@rem See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n@rem More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n@rem\n@rem set HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false\" \"-Dcom.sun.management.jmxremote.authenticate=false\"\n@rem set HBASE_MASTER_OPTS=%HBASE_JMX_BASE% \"-Dcom.sun.management.jmxremote.port=10101\"\n@rem set HBASE_REGIONSERVER_OPTS=%HBASE_JMX_BASE% \"-Dcom.sun.management.jmxremote.port=10102\"\n@rem set HBASE_THRIFT_OPTS=%HBASE_JMX_BASE% \"-Dcom.sun.management.jmxremote.port=10103\"\n@rem set HBASE_ZOOKEEPER_OPTS=%HBASE_JMX_BASE% -Dcom.sun.management.jmxremote.port=10104\"\n\n@rem File naming hosts on which HRegionServers will run.  $HBASE_HOME/conf/regionservers by default.\n@rem set HBASE_REGIONSERVERS=%HBASE_HOME%\\conf\\regionservers\n\n@rem Where log files are stored.  $HBASE_HOME/logs by default.\n@rem set HBASE_LOG_DIR=%HBASE_HOME%\\logs\n\n@rem A string representing this instance of hbase. $USER by default.\n@rem set HBASE_IDENT_STRING=%USERNAME%\n\n@rem Seconds to sleep between slave commands.  Unset by default.  This\n@rem can be useful in large clusters, where, e.g., slave rsyncs can\n@rem otherwise arrive faster than the master can service them.\n@rem set HBASE_SLAVE_SLEEP=0.1\n\n@rem Tell HBase whether it should manage it's own instance of Zookeeper or not.\n@rem set HBASE_MANAGES_ZK=true",
        "codeLineSeperator": "LF"
      },
      {
        "name": "conf/regionservers",
        "content": "#localhost",
        "codeLineSeperator": "LF"
      },
      {
        "name": "conf/hbase-policy.xml",
        "content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<!--\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n-->\n\n<configuration>\n  <property>\n    <name>security.client.protocol.acl</name>\n    <value>*</value>\n    <description>ACL for ClientProtocol and AdminProtocol implementations (ie. \n    clients talking to HRegionServers)\n    The ACL is a comma-separated list of user and group names. The user and \n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\". \n    A special value of \"*\" means all users are allowed.</description>\n  </property>\n\n  <property>\n    <name>security.admin.protocol.acl</name>\n    <value>*</value>\n    <description>ACL for HMasterInterface protocol implementation (ie. \n    clients talking to HMaster for admin operations).\n    The ACL is a comma-separated list of user and group names. The user and \n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\". \n    A special value of \"*\" means all users are allowed.</description>\n  </property>\n\n  <property>\n    <name>security.masterregion.protocol.acl</name>\n    <value>*</value>\n    <description>ACL for HMasterRegionInterface protocol implementations\n    (for HRegionServers communicating with HMaster)\n    The ACL is a comma-separated list of user and group names. The user and \n    group list is separated by a blank. For e.g. \"alice,bob users,wheel\". \n    A special value of \"*\" means all users are allowed.</description>\n  </property>\n</configuration>",
        "codeLineSeperator": "LF"
      },
      {
        "name": "conf/log4j.properties",
        "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.visibility.VisibilityController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this \n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=INFO\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of hbase:meta messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO",
        "codeLineSeperator": "LF"
      },
      {
        "name": "conf/hadoop-metrics2-hbase.properties",
        "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# syntax: [prefix].[source|sink].[instance].[options]\n# See javadoc of package-info.java for org.apache.hadoop.metrics2 for details\n\n*.sink.file*.class=org.apache.hadoop.metrics2.sink.FileSink\n# default sampling period\n*.period=10\n\n# Below are some examples of sinks that could be used\n# to monitor different hbase daemons.\n\n# hbase.sink.file-all.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file-all.filename=all.metrics\n\n# hbase.sink.file0.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file0.context=hmaster\n# hbase.sink.file0.filename=master.metrics\n\n# hbase.sink.file1.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file1.context=thrift-one\n# hbase.sink.file1.filename=thrift-one.metrics\n\n# hbase.sink.file2.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file2.context=thrift-two\n# hbase.sink.file2.filename=thrift-one.metrics\n\n# hbase.sink.file3.class=org.apache.hadoop.metrics2.sink.FileSink\n# hbase.sink.file3.context=rest\n# hbase.sink.file3.filename=rest.metrics",
        "codeLineSeperator": "LF"
      },
      {
        "name": "conf/hbase-site.xml",
        "content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<!--\n/**\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n-->\n\n<configuration>\n<property >\n  <name>hbase.tmp.dir</name>\n  <value>${java.io.tmpdir}/hbase-${user.name}</value>\n  <description>Temporary directory on the local filesystem.\n  Change this setting to point to a location more permanent\n  than '/tmp', the usual resolve for java.io.tmpdir, as the\n  '/tmp' directory is cleared on machine restart.</description>\n</property>\n\n<!--\n<property >\n  <name>hbase.rootdir</name>\n  <value>hdfs://192.168.33.110:8020/user/hbase</value>\n  <description>The directory shared by region servers and into\n  which HBase persists.  The URL should be 'fully-qualified'\n  to include the filesystem scheme.  For example, to specify the\n  HDFS directory '/hbase' where the HDFS instance's namenode is\n  running at namenode.example.org on port 9000, set this value to:\n  hdfs://namenode.example.org:9000/hbase.  By default, we write\n  to whatever ${hbase.tmp.dir} is set too  usually /tmp \n  so change this configuration or else all data will be lost on\n  machine restart.</description>\n</property>\n-->\n<property >\n  <name>hbase.fs.tmp.dir</name>\n  <value>/user/${user.name}/hbase-staging</value>\n  <description>A staging directory in default file system (HDFS)\n  for keeping temporary data.\n  </description>\n</property>\n<property >\n  <name>hbase.bulkload.staging.dir</name>\n  <value>${hbase.fs.tmp.dir}</value>\n  <description>A staging directory in default file system (HDFS)\n  for bulk loading.\n  </description>\n</property>\n<property >\n  <name>hbase.cluster.distributed</name>\n  <value>true</value>\n  <description>The mode the cluster will be in. Possible values are\n    false for standalone mode and true for distributed mode.  If\n    false, startup will run all HBase and ZooKeeper daemons together\n    in the one JVM.</description>\n</property>\n<!--\n<property>\n  <name>hbase.zookeeper.quorum</name>\n  <value>192.168.33.110,192.168.33.111,192.168.33.112</value>\n  <description>Comma separated list of servers in the ZooKeeper ensemble\n  (This config. should have been named hbase.zookeeper.ensemble).\n  For example, \"host1.mydomain.com,host2.mydomain.com,host3.mydomain.com\".\n  By default this is set to localhost for local and pseudo-distributed modes\n  of operation. For a fully-distributed setup, this should be set to a full\n  list of ZooKeeper ensemble servers. If HBASE_MANAGES_ZK is set in hbase-env.sh\n  this is the list of servers which hbase will start/stop ZooKeeper on as\n  part of cluster start/stop.  Client-side, we will take this list of\n  ensemble members and put it together with the hbase.zookeeper.clientPort\n  config. and pass it into zookeeper constructor as the connectString\n  parameter.</description>\n</property>\n-->\n<!--The above are the important configurations for getting hbase up\n  and running -->\n\n<property>\n  <name>hbase.local.dir</name>\n  <value>${hbase.tmp.dir}/local/</value>\n  <description>Directory on the local filesystem to be used\n  as a local storage.</description>\n</property>\n</configuration>",
        "codeLineSeperator": "LF"
      }
    ],
    "filesToUpload": [
      "http://mirror.bit.edu.cn/apache/hbase/stable/hbase-1.2.4-bin.tar.gz"
    ],
    "configContent": "{\"installDir\":\"/opt/hbase\",\"envvs\":{\"HBASE_LOG_DIR\":\"hbaselogdir\",\"HBASE_PID_DIR\":\"hbasepiddir\"},\"firewall\":{\"master\":\"16000,16010\",\"regionserver\":\"16020,16030\"}}",
    "actions": "install,start-hbase,stop-hbase",
    "preferredFormat": "JSON"
  }
}
