{"remoteFolder":"/easy-installer/","box":{"id":753672,"ip":"192.168.33.110","name":"box1","hostname":"a0.host.name","roles":"MASTER,HIVE_SERVER,NAMENODE,ZOOKEEPER,MYSQL_MASTER,RESOURCEMANAGER","dnsServer":"","ips":"","ports":"","boxRoleConfig":""},"boxGroup":{"id":917506,"name":"boxgroup1","configContent":"# place holder\n","installResults":null,"boxes":[{"id":753672,"ip":"192.168.33.110","name":"box1","hostname":"a0.host.name","roles":"MASTER,HIVE_SERVER,NAMENODE,ZOOKEEPER,MYSQL_MASTER,RESOURCEMANAGER","dnsServer":"192.168.2.60","ips":"","ports":"","boxRoleConfig":null},{"id":753671,"ip":"192.168.33.111","name":"box2","hostname":"a1.host.name","roles":"NODEMANAGER,REGIONSERVER,DATANODE,MYSQL_REPLICA,ZOOKEEPER","dnsServer":"192.168.2.60","ips":"192.168.2.12,192.168.2.13","ports":"80,8080","boxRoleConfig":null},{"id":753670,"ip":"192.168.33.112","name":"box3","hostname":"a2.host.name","roles":"NODEMANAGER,REGIONSERVER,DATANODE,MYSQL_REPLICA,ZOOKEEPER","dnsServer":"192.168.2.60","ips":"192.168.2.15,192.168.2.16","ports":"80,8080","boxRoleConfig":null}]},"software":{"name":"hive","sversion":"ps-2.1.1","ostype":"CentOs7","runas":"{user: \"hive\", group: \"hadoop\"}","timeouts":null,"runner":"powershell -File {code} -envfile {envfile} -action {action}","possibleRoles":"HIVE_SERVER","textfiles":[{"name":"conf/hive-site.xml","content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n\n<configuration>\n<!--\n<property>\n  <name>hive.zookeeper.quorum</name>\n  <value/>\n  <description>\n    List of ZooKeeper servers to talk to. This is needed for:\n    1. Read/write locks when hive.lock.manager is set to\n    org.apache.hadoop.hive.ql.lockmgr.zookeeper.ZooKeeperHiveLockManager,\n    2. When HiveServer2 supports service discovery via Zookeeper.\n    3. For delegation token storage if zookeeper store is used, if\n    hive.cluster.delegation.token.store.zookeeper.connectString is not set\n    4. LLAP daemon registry service\n  </description>\n</property>\n-->\n<property>\n  <name>hive.server2.transport.mode</name>\n  <value>binary</value>\n  <description>\n    Expects one of [binary, http].\n    Transport mode of HiveServer2.\n  </description>\n</property>\n\n<property>\n  <name>hive.server2.webui.port</name>\n  <value>10002</value>\n  <description>The port the HiveServer2 WebUI will listen on. This can beset to 0 or a negative integer to disable the web UI</description>\n</property>\n\n\n<property>\n    <name>hive.server2.thrift.port</name>\n    <value>10000</value>\n    <description>Port number of HiveServer2 Thrift interface when hive.server2.transport.mode is 'binary'.</description>\n</property>\n\n<property>\n    <name>hive.querylog.location</name>\n    <value>${system:java.io.tmpdir}/${system:user.name}</value>\n    <description>Location of Hive run time structured log file</description>\n</property>\n\n<property>\n    <name>hive.log4j.file</name>\n    <value/>\n    <description>\n      Hive log4j configuration file.\n      If the property is not set, then logging will be initialized using hive-log4j2.properties found on the classpath.\n      If the property is set, the value must be a valid URI (java.net.URI, e.g. \"file:///tmp/my-logging.xml\"),\n      which you can then extract a URL from and pass to PropertyConfigurator.configure(URL).\n    </description>\n</property>\n\n<!--\n<property>\n    <name>hive.server2.logging.operation.log.location</name>\n    <value>${system:java.io.tmpdir}/${system:user.name}/operation_logs</value>\n    <description>Top level directory where operation logs are stored if logging functionality is enabled</description>\n</property>\n-->\n\n<property>\n  <name>hive.server2.authentication</name>\n  <value>NONE</value>\n  <description>\n    Expects one of [nosasl, none, ldap, kerberos, pam, custom].\n    Client authentication types.\n      NONE: no authentication check\n      LDAP: LDAP/AD based authentication\n      KERBEROS: Kerberos/GSSAPI authentication\n      CUSTOM: Custom authentication provider\n              (Use with property hive.server2.custom.authentication.class)\n      PAM: Pluggable authentication module\n      NOSASL:  Raw transport\n  </description>\n</property>\n\n<property>\n  <name>hive.metastore.port</name>\n  <value>9083</value>\n  <description>Hive metastore listener port</description>\n</property>\n\n<property>\n  <name>javax.jdo.option.ConnectionURL</name>\n  <value>jdbc:derby:;databaseName=metastore_db;create=true</value>\n  <description>\n    JDBC connect string for a JDBC metastore.\n    To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.\n    For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.\n  </description>\n</property>\n\n<property>\n  <name>hive.server2.thrift.http.port</name>\n  <value>10001</value>\n  <description>Port number of HiveServer2 Thrift interface when hive.server2.transport.mode is 'http'.</description>\n</property>\n\n</configuration>","codeLineSeperator":"LF"}],"filesToUpload":["http://apache.fayea.com/hive/stable-2/apache-hive-2.1.1-bin.tar.gz"],"configContent":"{\"installDir\":\"/opt/hive\",\"dfsClusterName\":\"mydfscluster\",\"envvs\":{\"HADOOP_HOME\":\"/opt/hadoop/hadoop-2.7.3\"},\"firewall\":\"\"}","actions":"install,start-hiveserver,stop-hiveserver","preferredFormat":"JSON"}}